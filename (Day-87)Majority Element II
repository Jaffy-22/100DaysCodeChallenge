/*Given an integer array of size n, find all elements that appear more than ⌊ n/3 ⌋ times.

Example 1:
Input: nums = [3,2,3]
Output: [3]

Example 2:
Input: nums = [1]
Output: [1]

Example 3:
Input: nums = [1,2]
Output: [1,2]
*/
Solution:
class Solution {
    public List<Integer> majorityElement(int[] nums) {
        Arrays.sort(nums);
        ArrayList<Integer> list = new ArrayList<>();
        int threshold = nums.length / 3;
        for (int i = 0; i < nums.length; ) {
            int start = nums[i];
            int lastIndex = findLastIndex(nums, start);
            int count = lastIndex - i + 1;
            if (count > threshold) {
                list.add(start);
            }
            i = lastIndex + 1;
        }

        return list;
    }
    private int findLastIndex(int[] nums, int target) {
        for (int i = nums.length - 1; i >= 0; i--) {
            if (nums[i] == target) {
                return i;
            }
        }
        return -1; 
    }
}

