/*
Given an m x n binary matrix mat, return the number of special positions in mat.
A position (i, j) is called special if mat[i][j] == 1 and all other elements in row i and column j are 0 (rows and columns are 0-indexed).

Example 1:
1 0 0
0 0 1
1 0 0
Input: mat = [[1,0,0],[0,0,1],[1,0,0]]
Output: 1
Explanation: (1, 2) is a special position because mat[1][2] == 1 and all other elements in row 1 and column 2 are 0.

Example 2:
1 0 0
0 1 0
0 0 1
Input: mat = [[1,0,0],[0,1,0],[0,0,1]]
Output: 3
Explanation: (0, 0), (1, 1) and (2, 2) are special positions.
*/
class Solution {
    public int numSpecial(int[][] mat) {
        int count=0,tot=0;
        int r=mat.length;
        int c=mat[0].length;
        int[] rarr = new int[r];
        int[] carr = new int[c];
        for(int i=0;i<r;i++)
        {
            for(int j=0;j<c;j++)
            {
                if(mat[i][j]==1)
                count++;
            }
            rarr[i] = count;
            count=0;
        }
    
        for(int j=0;j<c;j++)
        {
            for(int i=0;i<r;i++)
            {
                if(mat[i][j]==1)
                count++;
            }
            carr[j]= count;
            count=0;
        }

        for(int i=0;i<r;i++)
        {
            for(int j=0;j<c;j++)
            {
             if(mat[i][j]==1 && rarr[i]==1 && carr[j]==1)
             {
                 tot++;
             }  
            }
        }
        return tot;
    }
}
