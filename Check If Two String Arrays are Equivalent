/*
Given two string arrays word1 and word2, return true if the two arrays represent the same string, and false otherwise.
A string is represented by an array if the array elements concatenated in order forms the string.

Example 1:

Input: word1 = ["ab", "c"], word2 = ["a", "bc"]
Output: true
Explanation:
word1 represents string "ab" + "c" -> "abc"
word2 represents string "a" + "bc" -> "abc"
The strings are the same, so return true.

Example 2:
Input: word1 = ["a", "cb"], word2 = ["ab", "c"]
Output: false

Example 3:
Input: word1  = ["abc", "d", "defg"], word2 = ["abcddefg"]
Output: true
 
Constraints:
1 <= word1.length, word2.length <= 103
1 <= word1[i].length, word2[i].length <= 103
1 <= sum(word1[i].length), sum(word2[i].length) <= 103
word1[i] and word2[i] consist of lowercase letters.
*/

bool arrayStringsAreEqual(char** word1, int word1Size, char** word2, int word2Size) {
    int len1 = 0;
    int len2 = 0;
    int max = (word1Size > word2Size) ? word1Size : word2Size;
    for (int i = 0; i <max ; i++) {
        if(i<word1Size)
        len1 += strlen(word1[i]);
        if(i<word2Size)
        len2 += strlen(word2[i]);
    }
    
    if (len1 != len2) {
        return false;
    }

    char s1[len1 + 1];
    char s2[len2 + 1];

    s1[0] = '\0';
    s2[0] = '\0';

    for (int i = 0; i < word1Size; i++) {
        strcat(s1, word1[i]);
    }

    for (int i = 0; i < word2Size; i++) {
        strcat(s2, word2[i]);
    }

    return strcmp(s1, s2) == 0;
}
